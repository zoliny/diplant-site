rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is admin (zol@gmail.com)
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'zol@gmail.com';
    }
    
    // Check if user is accessing their own data
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Books collection - anyone can read, only admin can write
    match /books/{bookId} {
      allow read: if true;
      allow write: if isAdmin();
      
      // Field validation
      allow create: if isAdmin() &&
        (!request.resource.data.isbn || request.resource.data.isbn is string) &&
        (!request.resource.data.title || request.resource.data.title is string) &&
        (!request.resource.data.author || request.resource.data.author is string) &&
        (!request.resource.data.publisher || request.resource.data.publisher is string) &&
        (!request.resource.data.topic || request.resource.data.topic is string) &&
        (!request.resource.data.language || request.resource.data.language is string) &&
        (!request.resource.data.price || request.resource.data.price is number);
    }
    
    // Users collection - users can read/write their own data, admin can access all
    match /users/{userId} {
      allow read, write: if isAdmin() || isUser(userId);
    }
    
    // Orders collection - users can read their own orders, only admin can write/delete
    match /orders/{orderId} {
      allow read: if isAdmin() || (request.auth != null && resource.data.userId == request.auth.uid);
      allow write, delete: if isAdmin();
    }

    // UserOrders collection - users can read/write their own orders, admin can access all
    match /userOrders/{orderId} {
      allow read: if isAdmin() || (request.auth != null && resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid &&
        request.resource.data.orderDate is timestamp &&
        request.resource.data.items is list;
      allow update, delete: if isAdmin();
    }

    // New purchases collection - only admin can read and write
    match /newpurchases/{purchaseId} {
      allow read, write: if isAdmin();
    }
  }
}